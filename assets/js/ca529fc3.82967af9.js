"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[176],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,y=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={id:"cities",title:"Cities",sidebar_position:5},a=void 0,l={unversionedId:"amd/cities",id:"amd/cities",title:"Cities",description:"Import",source:"@site/docs/v1/amd/cities.md",sourceDirName:"amd",slug:"/amd/cities",permalink:"/v1/amd/cities",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"cities",title:"Cities",sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"States",permalink:"/v1/amd/states"},next:{title:"\ud83e\ude84 Quick Guide",permalink:"/v1/quick"}},c={},s=[{value:"Import",id:"import",level:2},{value:"Get all cities",id:"get-all-cities",level:2},{value:"Get Cities by Country",id:"get-cities-by-country",level:2},{value:"Get Cities by State and Country",id:"get-cities-by-state-and-country",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const cities = require("country-cities").cities;\n')),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"get-all-cities"},"Get all cities"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const allCities = cities.all();\n\nconsole.log(allCities)\n")),(0,i.kt)("p",null,"The result will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[\n  {\n    countryCode: "AU",\n    latitude: "-31.12756000",\n    longitude: "150.90711000",\n    name: "Hillvue",\n    stateCode: "NSW",\n  },\n  {\n    countryCode: "AU",\n    latitude: "-33.91878000",\n    longitude: "150.86314000",\n    name: "Hinchinbrook",\n    stateCode: "NSW",\n  },\n  ...\n]\n')),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"get-cities-by-country"},"Get Cities by Country"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const auCities = cities.getByCountry("AU");\n\nconsole.log(auCities)\n')),(0,i.kt)("p",null,"The result will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[\n  {\n    countryCode: "AU",\n    latitude: "-31.12756000",\n    longitude: "150.90711000",\n    name: "Hillvue",\n    stateCode: "NSW",\n  },\n  {\n    countryCode: "AU",\n    latitude: "-33.91878000",\n    longitude: "150.86314000",\n    name: "Hinchinbrook",\n    stateCode: "NSW",\n  },\n  ...\n]\n')),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"get-cities-by-state-and-country"},"Get Cities by State and Country"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const nswCities = cities.getByState("NSW", "AU");\n\nconsole.log(nswCities)\n')),(0,i.kt)("blockquote",null,(0,i.kt)("b",null,"Important"),": The country code should be entered second parameter"),(0,i.kt)("p",null,"The result will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[\n  {\n    countryCode: "AU",\n    latitude: "-31.12756000",\n    longitude: "150.90711000",\n    name: "Hillvue",\n    stateCode: "NSW",\n  },\n  {\n    countryCode: "AU",\n    latitude: "-33.91878000",\n    longitude: "150.86314000",\n    name: "Hinchinbrook",\n    stateCode: "NSW",\n  },\n  ...\n]\n')))}p.isMDXComponent=!0}}]);