"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[199],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={id:"countries",title:"Countries",sidebar_position:3},i=void 0,l={unversionedId:"amd/countries",id:"amd/countries",title:"Countries",description:"Import",source:"@site/docs/v1/amd/countries.md",sourceDirName:"amd",slug:"/amd/countries",permalink:"/v1/amd/countries",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"countries",title:"Countries",sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Import",permalink:"/v1/amd/import"},next:{title:"States",permalink:"/v1/amd/states"}},c={},s=[{value:"Import",id:"import",level:2},{value:"Get all countries",id:"get-all-countries",level:2},{value:"Get country by its code",id:"get-country-by-its-code",level:2}],u={toc:s};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const countries = require("country-cities").countries;\n')),(0,a.kt)("h2",{id:"get-all-countries"},"Get all countries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const allCountries = countries.all();\n\nconsole.log(allCountries)\n")),(0,a.kt)("p",null,"The result will be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n  {\n    "isoCode": "US",\n    "name": "United State",\n    "phonecode": "1",\n    "flag": "\ud83c\uddfa\ud83c\uddf8",\n    "currency": "USD",\n    "latitude": "38.00000000",\n    "longitude": "-97.00000000",\n    "timezones": [\n      {\n        "zoneName": "America/Adak",\n        "gmtOffset": -36000,\n        "gmtOffsetName": "UTC-10:00",\n        "abbreviation": "HST",\n        "tzName": "Hawaii\u2013Aleutian Standard Time"\n      },\n      {\n        "zoneName": "America/Kentucky/Louisville",\n        "gmtOffset": -18000,\n        "gmtOffsetName": "UTC-05:00",\n        "abbreviation": "EST",\n        "tzName": "Eastern Standard Time (North America)"\n      },\n      ...\n    ]\n  },\n  {\n    "isoCode": "FR",\n    "name": "France",\n    "phonecode": "33",\n    "flag": "\ud83c\uddeb\ud83c\uddf7",\n    "currency": "EUR",\n    "latitude": "46.00000000",\n    "longitude": "2.00000000",\n    "timezones": [\n      {\n        "zoneName": "Europe/Paris",\n        "gmtOffset": 3600,\n        "gmtOffsetName": "UTC+01:00",\n        "abbreviation": "CET",\n        "tzName": "Central European Time"\n      }\n    ]\n  }\n  ...\n]\n')),(0,a.kt)("h2",{id:"get-country-by-its-code"},"Get country by its code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const us = countries.getByCode("US");\n\nconsole.log(us)\n')),(0,a.kt)("p",null,"The result will be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "isoCode": "US",\n  "name": "United State",\n  "phonecode": "1",\n  "flag": "\ud83c\uddfa\ud83c\uddf8",\n  "currency": "USD",\n  "latitude": "38.00000000",\n  "longitude": "-97.00000000",\n  "timezones": [\n    {\n      "zoneName": "America/Adak",\n      "gmtOffset": -36000,\n      "gmtOffsetName": "UTC-10:00",\n      "abbreviation": "HST",\n      "tzName": "Hawaii\u2013Aleutian Standard Time"\n    },\n    {\n      "zoneName": "America/Kentucky/Louisville",\n      "gmtOffset": -18000,\n      "gmtOffsetName": "UTC-05:00",\n      "abbreviation": "EST",\n      "tzName": "Eastern Standard Time (North America)"\n    }, \n    ...\n  ]\n}\n')))}m.isMDXComponent=!0}}]);